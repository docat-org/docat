name: docat ci

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.3.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        working-directory: docat
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==1.1.13
          python -m poetry install

      - name: run backend linter
        working-directory: docat
        run: |
          python -m poetry run flake8 docat tests

      - name: run backend static code analysis
        working-directory: docat
        run: |
          python -m poetry run mypy .

      - name: run backend tests
        working-directory: docat
        run: |
          python -m poetry run pytest

  container-image:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      max-parallel: 2
      matrix:
        registry:
          - name: ghcr.io
            org: ${{ github.repository_owner }}
            token: GITHUB_TOKEN
          - name: docker.io
            org: randombenj
            token: DOCKERHUB

    steps:
      - uses: actions/checkout@v2
      - name: Build Image
        run: |
          docker build . --tag ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat:${{ github.sha }}
          docker tag ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat:${{ github.sha }} ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat:unstable

      - name: tag latest and version on release
        run: |
          docker tag ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat:${{ github.sha }} ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat:$(git describe --tags)
          docker tag ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat:${{ github.sha }} ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat:latest
        if: startsWith(github.event.ref, 'refs/tags')

      - name: Registry Login
        uses: docker/login-action@v1
        with:
          registry: ${{ matrix.registry.name }}
          username: ${{ matrix.registry.org }}
          password: ${{ secrets[matrix.registry.token] }}

      - name: Publish Image
        run: |
          docker push --all-tags ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat
