name: docat ci

on: [push, pull_request]

jobs:
  python-test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        working-directory: docat
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==2.1.3
          python -m poetry install --all-groups

      - name: run backend linter
        working-directory: docat
        run: |
          python -m poetry run ruff check
          python -m poetry run ruff format --check

      - name: run backend static code analysis
        working-directory: docat
        run: |
          python -m poetry run mypy .

      - name: run backend tests
        working-directory: docat
        run: |
          python -m poetry run pytest

  javascript-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: install JavaScript dependencies
        working-directory: web
        run: yarn install

      - name: building frontend
        working-directory: web
        run: yarn build

      - name: run linter against code
        working-directory: web
        run: yarn lint

      - name: run test suite
        working-directory: web
        run: yarn test

  container-image:
    runs-on: ubuntu-latest
    needs: [python-test, javascript-test]

    strategy:
      max-parallel: 2
      matrix:
        registry:
          - name: ghcr.io
            org: ${{ github.repository_owner }}
            token: GITHUB_TOKEN
          - name: docker.io
            org: randombenj
            token: DOCKERHUB

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      # Note(Fliiiix): Only login and push on main repo where the secrets are available
      if: "!(github.event.pull_request.head.repo.fork || github.actor == 'dependabot[bot]')"
      with:
        registry: ${{ matrix.registry.name }}
        username: ${{ matrix.registry.org }}
        password: ${{ secrets[matrix.registry.token] }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push development
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        context: .
        push: true
        tags: |
          ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat:unstable
          ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push release
      uses: docker/build-push-action@v6
      if: startsWith(github.event.ref, 'refs/tags')
      with:
        platforms: linux/amd64,linux/arm64
        context: .
        push: true
        tags: |
          ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat:latest
          ${{ matrix.registry.name }}/${{ matrix.registry.org }}/docat:$(git describe --tags)
        cache-from: type=gha
        cache-to: type=gha,mode=max
